# Generated by Django 2.0.6 on 2018-08-29 13:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastname', models.CharField(max_length=100, verbose_name='Lastname')),
                ('firstname', models.CharField(max_length=100, verbose_name='Firstname')),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female')], default='M', max_length=1, verbose_name='Gender')),
                ('birthdate', models.DateField(verbose_name='Birthdate')),
                ('nationality', models.CharField(default='BEL', max_length=3, verbose_name='Nationality')),
            ],
            options={
                'ordering': ['lastname', 'firstname'],
            },
        ),
        migrations.CreateModel(
            name='Boulder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='ID number')),
                ('description', models.CharField(blank=True, max_length=100, verbose_name='Description')),
                ('top_value', models.PositiveIntegerField(default=1000, verbose_name='Value for top')),
                ('zone_value', models.PositiveIntegerField(default=0, verbose_name='Value for zone')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Code')),
                ('description', models.CharField(max_length=50, verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('gym', models.CharField(max_length=100, verbose_name='Gym/sport hall')),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Event short code')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('date', models.DateField(verbose_name='Event date')),
                ('description', models.TextField(blank=True, verbose_name='Event description')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Location')),
                ('min_boulder_nbr', models.PositiveIntegerField(default=1, verbose_name='Minimum boulder ID')),
                ('max_boulder_nbr', models.PositiveIntegerField(default=40, verbose_name='Maximum boulder ID')),
                ('categories', models.ManyToManyField(to='climbing.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dossard', models.PositiveIntegerField(verbose_name='Dossard')),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='climbing.Athlete')),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='climbing.Category')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='climbing.Competition')),
            ],
            options={
                'ordering': ['competition', 'dossard'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.PositiveSmallIntegerField(choices=[(10, ''), (0, 'failure'), (1, 'zone'), (2, 'top')])),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='attempt date')),
                ('boulder', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='climbing.Boulder')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='climbing.Competitor')),
            ],
        ),
        migrations.AddField(
            model_name='boulder',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='climbing.Competition'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='club',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='climbing.Club'),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together={('competitor', 'boulder')},
        ),
        migrations.AlterUniqueTogether(
            name='competitor',
            unique_together={('competition', 'dossard'), ('athlete', 'competition')},
        ),
        migrations.AlterUniqueTogether(
            name='boulder',
            unique_together={('competition', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='athlete',
            unique_together={('lastname', 'firstname')},
        ),
    ]
